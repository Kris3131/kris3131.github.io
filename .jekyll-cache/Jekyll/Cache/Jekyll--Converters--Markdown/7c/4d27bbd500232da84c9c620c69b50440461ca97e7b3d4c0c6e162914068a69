I"X+<h3 id="switch-sqlite3-to-postgresql">Switch SQLite3 to PostgreSQL</h3>

<h2 id="database">Database</h2>

<p>database是資料庫，為什麼需要資料庫？因為 client - server  互動需要資料傳輸， client 傳送資料給 server ， server 向 client 顯示資料，或是儲存 client 傳送的資料。所以需要 database 儲存資料。</p>

<p>假如所有資料通通放在一起，沒有一個系統性的整理，會變得很可怕。所以我們可以利用表格的方式整理散亂的資料，table 是資料表格，fields column 是”欄” ，record row 是資料”列”，視覺呈現會是這樣</p>

<p><img src="/assets/post_img/sql-table-column-row.png" alt="table" title="table-column-row" /></p>

<h2 id="dbms">DBMS</h2>

<p>database management system 管理資料庫的系統。MySQL / PostgreSQL</p>

<h2 id="sql">SQL</h2>

<p>操作資料庫的語言:SQL (Structured Query language)</p>

<h2 id="實作">實作</h2>

<p>Rails 預設使用 SQLite3 作為資料庫，主要是在開發，測試環境上，SQLite3 是一個輕量型的資料庫類型，但到正式產品上線，SQLite3 可能會不夠用。
實作情境大致分成三種，第一種：完美 PostgreSQL 專案建立，第二種：任性手動調整 SQLite3 -&gt; PostgreSQL ，跟最後一種：沒辦法就是要PostgreSQL</p>

<h1 id="安裝postgresql">安裝PostgreSQL</h1>

<p><code class="language-plaintext highlighter-rouge">brew install postgresql</code></p>

<p>使用 homebrew 安裝一鍵搞定</p>

<p><strong>啟動</strong> PostgreSQL</p>

<p><code class="language-plaintext highlighter-rouge">brew services start postgresql</code>
<strong>關掉</strong> PostgreSQL
<code class="language-plaintext highlighter-rouge">brew services stop postgresql</code></p>

<h1 id="正常一點用postgresql-建立專案">正常一點，用PostgreSQL 建立專案</h1>

<p><code class="language-plaintext highlighter-rouge">rails new myapp --database=postgresql</code></p>

<p>意思是：用 rails 直接 new 一個新的專案，database 使用 postgresql。 <br />
config/database.yml檔案中可以看到 database 的設定狀態</p>

<figure class="highlight"><pre><code class="language-yml" data-lang="yml"><span class="na">default</span><span class="pi">:</span> <span class="nl">&amp;default</span>
    <span class="na">adapter</span><span class="pi">:</span> <span class="s">postgresql</span>
    <span class="na">encoding</span><span class="pi">:</span> <span class="s">unicode</span>
    <span class="na">pool</span><span class="pi">:</span> <span class="s">&lt;%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %&gt;</span>
<span class="na">development</span><span class="pi">:</span>
    <span class="na">&lt;&lt;</span><span class="pi">:</span> <span class="nv">*default</span>
    <span class="na">database</span><span class="pi">:</span> <span class="s">myapp_development</span>
<span class="na">test</span><span class="pi">:</span>
    <span class="na">&lt;&lt;</span><span class="pi">:</span> <span class="nv">*default</span>
    <span class="na">database</span><span class="pi">:</span> <span class="s">myapp_test</span>
<span class="na">production</span><span class="pi">:</span>
    <span class="na">&lt;&lt;</span><span class="pi">:</span> <span class="nv">*default</span>
    <span class="na">database</span><span class="pi">:</span> <span class="s">myapp_production</span>
    <span class="na">username</span><span class="pi">:</span> <span class="s">myapp</span>
    <span class="na">password</span><span class="pi">:</span> <span class="s">&lt;%= ENV['MYAPP_DATABASE_PASSWORD'] %&gt;</span></code></pre></figure>

<p>最後，在用<code class="language-plaintext highlighter-rouge">rails db:create</code>的指令讓 rails 和資料庫做連結，</p>

<p><img src="/assets/post_img/postgresql-database-create-success.png" alt="database_create" title="database_create" /></p>

<h1 id="手賤一點原本是-sqlite3-轉到-postgresql">手賤一點，原本是 SQLite3 轉到 PostgreSQL</h1>

<p>以這個情境來說，是自己建立專案，獨立開發的狀態下，</p>

<p>一樣， new 一個新的 Rails 專案，
<code class="language-plaintext highlighter-rouge">rails new myapp_default_sqlite3</code></p>

<p>config/database.yml檔案中可以看到 database 的設定狀態</p>

<figure class="highlight"><pre><code class="language-yml" data-lang="yml"><span class="na">default</span><span class="pi">:</span> <span class="nl">&amp;default</span>
  <span class="na">adapter</span><span class="pi">:</span> <span class="s">sqlite3</span>
  <span class="na">pool</span><span class="pi">:</span> <span class="s">&lt;%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %&gt;</span>
  <span class="na">timeout</span><span class="pi">:</span> <span class="m">5000</span>

<span class="na">development</span><span class="pi">:</span>
  <span class="na">&lt;&lt;</span><span class="pi">:</span> <span class="nv">*default</span>
  <span class="na">database</span><span class="pi">:</span> <span class="s">db/development.sqlite3</span>

<span class="na">test</span><span class="pi">:</span>
  <span class="na">&lt;&lt;</span><span class="pi">:</span> <span class="nv">*default</span>
  <span class="na">database</span><span class="pi">:</span> <span class="s">db/test.sqlite3</span>

<span class="na">production</span><span class="pi">:</span>
  <span class="na">&lt;&lt;</span><span class="pi">:</span> <span class="nv">*default</span>
  <span class="na">database</span><span class="pi">:</span> <span class="s">db/production.sqlite3</span></code></pre></figure>

<p><strong>來吧動手改掉他吧</strong></p>

<ul>
  <li>打開 Gemfile:
    <ul>
      <li>把<code class="language-plaintext highlighter-rouge">gem 'sqlite3'</code>註解掉</li>
      <li>加上<code class="language-plaintext highlighter-rouge">gem 'pg'</code></li>
      <li><code class="language-plaintext highlighter-rouge">bundle</code></li>
    </ul>
  </li>
  <li>打開 PostgreSQL services<code class="language-plaintext highlighter-rouge">brew services start postgresql</code></li>
</ul>

<p>－  進入到PostgreSQL模式，<code class="language-plaintext highlighter-rouge">psql</code></p>

<ul>
  <li>
    <p>直接建立資料庫<code class="language-plaintext highlighter-rouge">CREATE DATABASE YOUR_DATABASE_NAME</code></p>
  </li>
  <li>
    <p>修改database.yml檔</p>
  </li>
</ul>

<figure class="highlight"><pre><code class="language-yml" data-lang="yml"><span class="na">default</span><span class="pi">:</span> <span class="nl">&amp;default</span>
  <span class="na">adapter</span><span class="pi">:</span> <span class="err">*</span><span class="nv">*postgresql</span><span class="err">**</span>
  <span class="na">pool</span><span class="pi">:</span> <span class="s">&lt;%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %&gt;</span>
  <span class="na">timeout</span><span class="pi">:</span> <span class="m">5000</span>

<span class="na">development</span><span class="pi">:</span>
  <span class="na">&lt;&lt;</span><span class="pi">:</span> <span class="nv">*default</span>
  <span class="na">database</span><span class="pi">:</span> <span class="err">*</span><span class="nv">*myapp</span><span class="err">**</span>

<span class="na">test</span><span class="pi">:</span>
  <span class="na">&lt;&lt;</span><span class="pi">:</span> <span class="nv">*default</span>
  <span class="na">database</span><span class="pi">:</span> <span class="err">*</span><span class="nv">*myapp</span><span class="err">**</span>

<span class="na">production</span><span class="pi">:</span>
  <span class="na">&lt;&lt;</span><span class="pi">:</span> <span class="nv">*default</span>
  <span class="na">database</span><span class="pi">:</span> <span class="err">*</span><span class="nv">*myapp</span><span class="err">**</span></code></pre></figure>

<ul>
  <li><code class="language-plaintext highlighter-rouge">rails db:create</code></li>
</ul>

<p><img src="/assets/post_img/sqlite3-default-switch-postgresql.png" alt="database_create" title="database_create" /></p>

<p>成功將 rails 和 PostgreSQL 的資料庫串起來了</p>

<h1 id="第三種情境是沒有選擇協作專案">第三種情境是沒有選擇，協作專案…</h1>

<p><img src="/assets/post_img/clone-project.png" alt="database_create" title="database_create" /></p>

<p>database的部分，不是自己建的，要怎麼跟自己本機端的database串在一起？</p>

<p>這時候需要 PostgreSQL USER_NAME 跟 USER_PASSWORD ，讓這個database也可以在本機建立資料。</p>

<p>首先找出自己的 PostgreSQL USER_NAME 跟 USER_PASSWORD ，我的方式是透過 <code class="language-plaintext highlighter-rouge">psql</code> 進到資料庫，接者打指令<code class="language-plaintext highlighter-rouge">\du</code>，可以列出使用者。</p>

<p>這裡順便把 PostgreSQL常用語法也列出來。</p>

<table>
  <thead>
    <tr>
      <th>指令</th>
      <th>幹嘛的</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>\l</td>
      <td>顯示所有資料庫</td>
    </tr>
    <tr>
      <td>\du</td>
      <td>查看所有USER</td>
    </tr>
    <tr>
      <td>\c <em>DatabaseName</em></td>
      <td>切換資料庫</td>
    </tr>
    <tr>
      <td>\q</td>
      <td>結束</td>
    </tr>
  </tbody>
</table>

<figure class="highlight"><pre><code class="language-yml" data-lang="yml">    <span class="na">adapter</span><span class="pi">:</span> <span class="s">postgresql</span>
    <span class="na">encoding</span><span class="pi">:</span> <span class="s">unicode</span>
    <span class="na">database</span><span class="pi">:</span> <span class="s">blog_development</span>
    <span class="na">username</span><span class="pi">:</span> <span class="s">YOUR_USERNAME</span>
    <span class="na">password</span><span class="pi">:</span> <span class="s">YOUR_PASSWORD</span>
    <span class="na">pool</span><span class="pi">:</span> <span class="s">5</span></code></pre></figure>

<p>最後一樣，<code class="language-plaintext highlighter-rouge">rails db:create</code>，看看有沒有成功的在本地的 PostgreSQL 建立 database</p>

<p><img src="/assets/post_img/git-clone.png" alt="database_create" title="database_create" /></p>

<p>不過要是把 username / password 直接寫在檔案裡，要是進行 Git 版控裡，或是放在 GitHub 中帳號密碼會外洩，這裡有另外一個 gem 套件， <a href="https://github.com/bkeepers/dotenv">dotenv</a></p>

<p>安裝步驟：</p>

<ul>
  <li>根據GitHub上的教學，把 dotenv 放到 Gemfile
    <ul>
      <li><code class="language-plaintext highlighter-rouge">gem 'dotenv-rails', groups: [:development, :test]</code></li>
      <li>記得<code class="language-plaintext highlighter-rouge">bundle</code></li>
    </ul>
  </li>
  <li>目錄列建立一個<code class="language-plaintext highlighter-rouge">.env</code>檔案
檔案放
<code class="language-plaintext highlighter-rouge">USERNAME: YOUR_USERNAME</code> <br />
<code class="language-plaintext highlighter-rouge">PASSWORD: YOUR_PASSWORD</code></li>
  <li></li>
</ul>
:ET